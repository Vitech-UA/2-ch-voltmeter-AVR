#include <mega8.h>
#include <delay.h>
#include <alcd.h>
#include <stdio.h>


#define FIRST_ADC_INPUT 0
#define LAST_ADC_INPUT 1
unsigned int adc_data[LAST_ADC_INPUT-FIRST_ADC_INPUT+1];
// Voltage Reference: Int., cap. on AREF
#define ADC_VREF_TYPE ((1<<REFS1) | (1<<REFS0) | (0<<ADLAR))

float result;
float result2;
// ADC interrupt service routine
// with auto input scanning
interrupt [ADC_INT] void adc_isr(void)
{
static unsigned char input_index=0;
// Read the AD conversion result
adc_data[input_index]=ADCW;
// Select next ADC input
if (++input_index > (LAST_ADC_INPUT-FIRST_ADC_INPUT))
   input_index=0;
ADMUX=(FIRST_ADC_INPUT | ADC_VREF_TYPE)+input_index;
// Delay needed for the stabilization of the ADC input voltage
delay_us(10);
// Start the AD conversion
ADCSRA|=(1<<ADSC);
}

void main(void)
{
char lcd_buffer1[31];
char lcd_buffer2[31];

 
DDRB=0x00;
PORTB=0x00;

DDRC=0x00;
PORTC=0x00;

DDRD=0x00;
PORTD=0x00;

// ADC initialization
// ADC Clock frequency: 125,000 kHz
// ADC Voltage Reference: Int., cap. on AREF
ADMUX=FIRST_ADC_INPUT | ADC_VREF_TYPE;
ADCSRA=(1<<ADEN) | (1<<ADSC) | (0<<ADFR) | (0<<ADIF) | (1<<ADIE) | (1<<ADPS2) | (1<<ADPS1) | (0<<ADPS0);
SFIOR=(0<<ACME);

// Alphanumeric LCD initialization
// Connections are specified in the
// Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
// RS - PORTB Bit 0
// RD - PORTB Bit 1
// EN - PORTB Bit 2
// D4 - PORTB Bit 3
// D5 - PORTB Bit 4
// D6 - PORTB Bit 5
// D7 - PORTB Bit 6
// Characters/line: 8
lcd_init(8);

// Global enable interrupts
#asm("sei")
lcd_clear();

while (1)
      {
       lcd_gotoxy(0,0);
       result=((5.00*adc_data[0])/1024.00) * 5.24;
       sprintf(lcd_buffer1,"U=%.2fV",result);
       lcd_puts(lcd_buffer1);  
       
       lcd_gotoxy(0,1);
       result=((5.00*adc_data[1])/1024.00) * 5.24;
       sprintf(lcd_buffer2,"U2=%.2fV",result2);
       lcd_puts(lcd_buffer2);

      }
}
